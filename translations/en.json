{
  "app_title": "Server Monitoring Telegram Bot System",
  "test_connection_message": "**Connection Test** ✓\nIf you are seeing this message, the Telegram configuration is correct.",
  "nav": {
    "monitoring": "Monitoring",
    "telegram": "Telegram",
    "alerts": "Alert System",
    "mount_points": "Mount Points",
    "languages": "Languages",
    "commands": "Commands",
    "video_analysis": "Video Analysis",
    "info": "Information"
  },
  "monitoring": {
    "title": "Monitoring SSH/SFTP Logins",
    "status": {
      "active": "Active",
      "inactive": "Inactive"
    },
    "description": "Monitoring SSH/SFTP connections and sends Telegram notifications when it detects a new access.",
    "excluded_ips": {
      "title": "Excluded IPs from Monitoring",
      "placeholder": "Enter IPs to exclude (one per line)",
      "description": "IP addresses entered here will not generate SSH/SFTP access notifications. Supports single IPs (e.g. 192.168.1.100) and CIDR notation (e.g. 192.168.178.0/24)",
      "save_button": "Save Excluded IPs",
      "save_success": "Excluded IPs list saved successfully",
      "save_error": "Error saving excluded IPs list",
      "communication_error": "Error communicating with server"
    },
    "toggle_success": "Monitoring {status} successfully",
    "toggle_error": "Error changing monitoring status"
  },
  "alerts": {
    "title": "Monitoring and Alert System",
    "global_status": {
      "enabled": "Monitoring System Enabled",
      "disabled": "Monitoring System Disabled"
    },
    "global_description": "Enable/disable the entire monitoring and notification system",
    "monitoring_interval": "Check interval (seconds)",
    "current_metrics": "Current Values",
    "refresh": "Refresh",
    "cpu_monitoring": "CPU Monitoring",
    "ram_monitoring": "RAM Monitoring",
    "temp_monitoring": "CPU Temperature Monitoring",
    "disk_monitoring": "Disk Space Monitoring",
    "network_monitoring": "Network Connection Monitoring",
    "enabled": "Enabled",
    "threshold": "Threshold",
    "hysteresis": "Hysteresis",
    "hysteresis_duration": "Hysteresis Duration (sec)",
    "hysteresis_description": "Hysteresis delays alert sending only if the value exceeds the threshold for the specified time",
    "reminder": "Reminder",
    "interval": "Interval",
    "unit": "Unit",
    "test": "Test",
    "save_config": "Save Configuration",
    "reset_config": "Reset to Defaults",
    "disk_info": "Configure mount points in the \"Mount Points\" section to enable disk monitoring.",
    "network_description": "Monitor internet connection and send notification when network reconnects after a disconnection.",
    "network_test_host": "Test Host",
    "network_test_timeout": "Test Timeout (seconds)",
    "network_disconnect_alert": "Disconnect Notification",
    "network_reconnect_alert": "Internet Reconnection Notification",
    "network_reconnect_help": "Send notification when network reconnects",
    "config_saved": "Configuration saved successfully",
    "config_reset": "Configuration reset to default values",
    "config_reset_confirm": "Are you sure you want to reset to default configuration? All current settings will be lost.",
    "metrics_updated": "Metrics updated",
    "test_sent": "Test message sent for {parameter}. Check Telegram.",
    "test_messages": {
      "cpu_usage": "🧪 **TEST - CPU Monitoring**\n\nThis is a test message to verify that CPU monitoring notifications work correctly.",
      "ram_usage": "🧪 **TEST - RAM Monitoring**\n\nThis is a test message to verify that RAM monitoring notifications work correctly.",
      "cpu_temperature": "🧪 **TEST - Temperature Monitoring**\n\nThis is a test message to verify that temperature monitoring notifications work correctly.",
      "disk_usage": "🧪 **TEST - Disk Monitoring**\n\nThis is a test message to verify that disk monitoring notifications work correctly.",
      "network": "🧪 **TEST - Network Monitoring**\n\nThis is a test message to verify that network connection monitoring notifications work correctly.",
      "generic": "🧪 **TEST - Monitoring System**\n\nThis is a generic test message."
    },
    "units": {
      "seconds": "Seconds",
      "minutes": "Minutes",
      "hours": "Hours",
      "days": "Days"
    },
    "metrics": {
      "cpu": "CPU",
      "ram": "RAM",
      "temperature": "Temperature", 
      "disk": "Disk",
      "network": "Network"
    },
    "status_messages": {
      "enabled": "enabled",
      "disabled": "disabled",
      "toggle_success": "Monitoring system {status} successfully"
    }
  },
  "telegram": {
    "title": "Telegram Configuration",
    "bot_token": "Bot Token",
    "chat_id": "Chat ID",
    "bot_token_placeholder": "Enter the Telegram bot token",
    "chat_id_placeholder": "Enter the chat ID",
    "test_connection": "Test Connection",
    "save": "Save",
    "test_in_progress": "Testing...",
    "test_success": "Telegram connection successful! Check the test message received on your device.",
    "credentials_saved": "Telegram credentials saved successfully",
    "available_commands": "Available commands in the Telegram bot",
    "commands": {
      "start": "Start the bot",
      "help": "Show available commands",
      "resources": "Display system resources",
      "docker": "Manage Docker containers",
      "upload": "Upload files to server",
      "download": "Download files from server",
      "commands": "Execute configured commands",
      "reboot": "Restart the server"
    }
  },
  "mount_points": {
    "title": "Mount Points Configuration",
    "upload_section": "Upload",
    "download_section": "Download",
    "upload_description": "Configure mount points for the /upload command in the Telegram bot.",
    "download_description": "Configure mount points for the /download command in the Telegram bot.",
    "add_placeholder": "Enter the path (e.g. /home/user/uploads)",
    "download_add_placeholder": "Enter the path (e.g. /home/user/downloads)",
    "add": "Add",
    "save": "Save Configuration",
    "save_upload": "Save Upload",
    "save_download": "Save Download",
    "no_mounts": "No mount points configured. Add one below.",
    "no_upload_mounts": "No upload mount points configured. Add one below.",
    "no_download_mounts": "No download mount points configured. Add one below.",
    "path_required": "Enter a valid path",
    "path_exists": "This path is already configured",
    "mount_added": "Mount point added",
    "upload_mount_added": "Upload mount point added",
    "download_mount_added": "Download mount point added",
    "mounts_saved": "Mount points saved successfully",
    "upload_mounts_saved": "Upload mount points saved successfully",
    "download_mounts_saved": "Download mount points saved successfully"
  },
  "languages": {
    "title": "Language Management",
    "description": "Manage available languages for the interface and Telegram bot. You can upload new translation files in JSON format.",
    "available_languages": "Available Languages",
    "add_new_language": "Add New Language",
    "language_code": "Language Code (e.g. fr, de, es)",
    "language_code_help": "Enter the two-letter ISO 639-1 language code.",
    "language_name": "Language Name",
    "translation_file": "JSON Translation File",
    "translation_file_help": "The file must contain all translation keys.",
    "download_template": "Download template",
    "upload_language": "Upload Language",
    "delete_language": "Delete",
    "delete_confirm": "Are you sure you want to delete the {language} language?",
    "cannot_delete_default": "Cannot delete default languages",
    "upload_success": "Language uploaded successfully",
    "delete_success": "Language deleted successfully",
    "upload_error": "Error uploading language",
    "validation_error": "Validation error",
    "all_fields_required": "Fill in all required fields",
    "code_length_error": "Language code must be 2 characters",
    "uploading": "Uploading...",
    "default_badge": "Default"
  },
  "info": {
    "title": "Information",
    "description": "This application monitors SSH connections to the system and sends Telegram notifications when it detects a new access.",
    "requirements": "To use this application, you need to:",
    "steps": [
      "Create a Telegram bot using BotFather and get the token",
      "Get the chat ID where you want to receive notifications (can be your personal ID or a group ID)",
      "Enter this data in the configuration form above",
      "Test the connection to verify everything works correctly"
    ],
    "advanced_features": "Advanced features:",
    "features": [
      "SSH Monitoring - Detects and notifies SSH connections",
      "Docker Management - Control Docker containers via Telegram",
      "File Upload - Upload files to server via Telegram",
      "System Resources - View CPU, RAM, disk and network",
      "Alert System - Parameter monitoring with automatic notifications"
    ]
  },
  "general": {
    "language": "English",
    "select_language": "Select language",
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Information",
    "connection_error": "Server connection error",
    "required_fields": "Fill in all required fields"
  },
  "theme": {
    "toggle_theme": "Toggle theme",
    "light_theme": "Light theme",
    "dark_theme": "Dark theme",
    "switch_to_dark": "Switch to dark theme",
    "switch_to_light": "Switch to light theme"
  },
  "video_analysis": {
    "title": "Video Analysis",
    "configuration": "AI Detection Configuration",
    "global_enabled": "Enable AI Detection Globally",
    "model": "YOLO Model",
    "detection_interval": "Detection Interval (seconds)",
    "max_cameras": "Max Concurrent Cameras",
    "save_config": "Save Configuration",
    "status": "Status",
    "controls": "Detection Controls",
    "start": "Start Detection",
    "restart": "Restart Detection",
    "stop": "Stop Detection",
    "system_status": "System Status:",
    "waiting": "Waiting for update...",
    "cameras": {
      "title": "Camera Management",
      "add": "Add Camera",
      "name": "Camera Name",
      "rtsp_url": "RTSP URL",
      "confidence": "Confidence Threshold",
      "categories": "Categories to Detect",
      "people": "👤 People",
      "objects": "📦 Objects",
      "animals": "🐾 Animals",
      "save": "Save",
      "enabled": "Enabled",
      "settings": "Settings",
      "placeholder": {
        "name": "e.g. Main Entrance",
        "rtsp": "rtsp://username:password@ip:port/stream"
      },
      "iou_threshold": "IoU Threshold",
      "iou_threshold_description": "Intersection over Union threshold for filtering overlapping detections (lower = more strict)",
      "save_images": "Save Images to Server",
      "save_images_description": "When enabled, detection snapshots will be permanently saved to the server for all cameras",
      "save_path": "Save Path",
      "save_path_description": "Directory path where all detection snapshots will be stored on the server",
      "save_path_placeholder": "Enter the path where to save snapshots"
    },
    "models": {
      "nano": "yolov10n Nano (Fast)",
      "small": "yolov10s Small",
      "medium": "yolov10m Medium",
      "large": "yolov10l Large (Accurate)",
      "xlarge": "yolov10x XLarge (Super Accurate)"
    },
    "bot_messages": {
      "detection_started": "🎥 **AI Detection Started**\n\nThe AI detection system has been started and is monitoring the configured cameras.",
      "detection_stopped": "🛑 **AI Detection Stopped**\n\nThe AI detection system has been stopped.",
      "detection_restarted": "🔄 **AI Detection Restarted**\n\nThe AI detection system has been restarted with the new settings.",
      "object_detected": "🔍 **Object Detected**\n\nCamera: {camera_name}\nObjects: {objects}\nDate: {date}\nTime: {time}"
    }
  },
  "bot_messages": {
    "welcome": "Welcome to Server Monitor Bot!\n\nThis bot allows you to monitor your server status and receive notifications when important events are detected such as SSH access or high resource usage.\n\nUse /res to check current server status\nUse /help to see all available commands",
    "help": "Available commands:\n\n/start - Start the bot\n/help - Show this help message\n/res - Display system resources\n/docker - Manage Docker containers\n/upload - Upload files to server\n/download - Download files from server\n/commands - Execute configured commands\n/reboot - Restart server (requires confirmation)",
    "keyboard_buttons": {
      "resources": "📊 Resource Usage",
      "docker": "🐳 Containers",
      "upload": "📤 Upload to Server",
      "download": "📥 Download from Server",
      "ai": "🤖 AI Detection",
      "commands": "⚙️ Commands List",
      "reboot": "🔄 Reboot Server",
      "help": "❓ Help"
    },
    "choose_resource": "Choose which information to display:",
    "reboot_confirm": "Are you sure you want to restart the server?\n\nThis action will cause a temporary interruption of all services.",
    "reboot_yes": "Yes, restart server",
    "reboot_no": "No, cancel",
    "operation_cancelled": "Operation cancelled.",
    "reboot_in_progress": "Server reboot in progress...\n\nThe server will be restarted. This operation may take a few minutes.\nThe bot will be temporarily unavailable until the reboot is complete.",
    "commands": {
      "title": "📋 Available Commands",
      "select_command": "Select a command to execute:",
      "no_commands": "❌ No commands configured.",
      "no_enabled_commands": "❌ No enabled commands.",
      "cancel": "❌ Cancel",
      "error": "❌ Error loading commands.",
      "command_not_found": "❌ Command not found.",
      "command_disabled": "❌ Command disabled.",
      "executing": "⏳ Executing command *{command_name}*...",
      "script_not_found": "❌ Script not found at specified path.",
      "execution_success": "✅ *Command Executed Successfully*\n\n📝 *Name:* {command_name}\n📄 *Description:* {description}\n🕐 *Timestamp:* {timestamp}\n\n📤 *Output:*\n```\n{output}\n```",
      "execution_error": "❌ *Command Execution Error*\n\n📝 *Name:* {command_name}\n🚨 *Error:* {error}\n🕐 *Timestamp:* {timestamp}",
      "scheduled_success": "⏰ *Scheduled Command Executed*\n\n📝 *Name:* {command_name}\n📄 *Description:* {description}\n🕐 *Timestamp:* {timestamp}\n\n📤 *Output:*\n```\n{output}\n```",
      "scheduled_success_no_output": "⏰ *Scheduled Command Executed*\n\n📝 *Name:* {command_name}\n📄 *Description:* {description}\n🕐 *Timestamp:* {timestamp}",
      "scheduled_error": "⏰ *Scheduled Command Error*\n\n📝 *Name:* {command_name}\n🚨 *Error:* {error}\n🕐 *Timestamp:* {timestamp}",
      "scheduling_system_error": "⏰ *Scheduling System Error*\n\n📝 *Command:* {command_name}\n🚨 *Error:* {error}\n🕐 *Timestamp:* {timestamp}",
      "general_error": "❌ General error during command execution."
    },
    "ai_detection": {
      "title": "🤖 AI Detection Control",
      "status_title": "📊 Current Status:",
      "global_enabled": "✅ AI Detection Globally Enabled",
      "global_disabled": "❌ AI Detection Globally Disabled",
      "cameras_active": "📹 Active Cameras: {count}",
      "cameras_total": "📱 Total Cameras: {count}",
      "start_button": "▶️ Start",
      "stop_button": "⏹️ Stop",
      "restart_button": "🔄 Restart",
      "toggle_global_button": "🔧 Toggle Global Enable/Disable",
      "status_button": "📊 Detailed Status",
      "back_button": "🔙 Back to Menu",
      "not_available": "❌ AI Detection not available or not enabled",
      "started": "✅ AI Detection started successfully",
      "stopped": "⏹️ AI Detection stopped successfully",
      "restarted": "🔄 AI Detection restarted successfully",
      "start_error": "❌ Error starting AI Detection",
      "stop_error": "❌ Error stopping AI Detection",
      "restart_error": "❌ Error restarting AI Detection",
      "global_enabled_msg": "✅ AI Detection enabled globally",
      "global_disabled_msg": "❌ AI Detection disabled globally",
      "toggle_error": "❌ Error toggling global state",
      "status_detailed": "📊 Detailed AI Detection Status",
      "status_error": "❌ Error retrieving status",
      "active_cameras_list": "📹 Active Cameras:",
      "back_to_menu": "🔙 Back to AI Menu"
    },
    "docker_management": "Docker Container Management",
    "docker_summary": "🟢 Running: {running} | 🔴 Stopped: {stopped}",
    "back_to_resources": "⬅️ Back to resources menu",
    "back_to_list": "⬅️ Back to list",
    "back_to_container_list": "⬅️ Back to container list",
    "back": "⬅️ Back",
    "all_resources": "All",
    "cpu": "CPU",
    "ram": "RAM",
    "disk": "Disk",
    "network": "Network",
    "docker_list": "Docker List",
    "previous": "⬅️ Prev",
    "next": "Next ➡️",
    "docker_details": {
      "container": "CONTAINER",
      "status": "Status",
      "status_running": "🟢 Running",
      "status_stopped": "🔴 Stopped",
      "uptime": "⏱️ Uptime",
      "image": "🐳 Image",
      "resources": "📈 RESOURCES",
      "cpu": "🔄 CPU",
      "memory": "💾 Memory",
      "ports": "🔌 MAPPED PORTS",
      "port_mapped": "📡",
      "port_unmapped": "🔹",
      "port_unmapped_text": "(unmapped)",
      "volumes": "📁 VOLUMES",
      "configuration": "🔧 CONFIGURATION",
      "env_vars": "⚙️ Environment variables",
      "env_vars_count": "configured",
      "actions": {
        "stop": "⏹️ Stop",
        "pause": "⏸️ Pause", 
        "restart": "🔄 Restart",
        "start": "▶️ Start"
      },
      "unknown": "Unknown",
      "unknown_image": "Unknown",
      "error_inspect": "Error inspecting container",
      "unrecognized_command": "Unrecognized Docker command."
    },
    "upload": {
      "title": "*File Upload*",
      "select_mount": "Select a mount point to start browsing:",
      "note": "**Note:** Once selected, you can navigate through directories.",
      "no_mount_points": "⚠️ You haven't configured any mount points. Use the web panel to configure mount points.",
      "cancel": "❌ Cancel",
      "select_folder": "✅ Select this folder",
      "create_folder": "📁 Create new folder",
      "delete_folder": "🗑️ Delete this folder",
      "parent_directory": "⬆️ Parent Directory",
      "folder_selected": "📂 *Selected directory:* `{path}`\n\nNow send the files you want to upload.",
      "creating_folder": "*Creating New Folder*\n\nCurrent path: `{path}`\n\nEnter the new folder name:",
      "operation_cancelled": "❌ Upload operation cancelled.",
      "navigation_title": "*Directory Navigation*",
      "current_path": "Current path",
      "subfolders": "Subfolders",
      "files": "Files",
      "navigation_instruction": "Select a folder to explore or choose 'Select this folder' to upload files here.",
      "folder_created_success": "✅ Folder `{folder_name}` created successfully!",
      "navigate_new_folder": "*Navigate to new folder*\n\nFolder created: `{path}`\n\nClick to continue navigation:",
      "upload_required": "⚠️ To upload files, first use the /upload command and select a destination directory.",
      "upload_more_files": "📋 Upload more files",
      "upload_question": "Do you want to upload more files or are you finished?",
      "delete_confirmation": "*⚠️ Delete Folder*\n\nAre you sure you want to delete the folder `{folder_name}`?\n\nPath: `{path}`\n\n⚠️ *Warning:* This operation cannot be undone!",
      "delete_non_empty": "*⚠️ Warning: Folder Not Empty*\n\nThe folder `{folder_name}` contains files or subfolders.\n\nAre you sure you want to delete all content?",
      "confirm_delete": "✅ Yes, delete",
      "confirm_force_delete": "✅ Yes, delete anyway",
      "cancel_delete": "❌ No, cancel",
      "folder_deleted_success": "✅ Folder deleted successfully!",
      "folder_force_deleted_success": "✅ Folder and all its contents deleted successfully!",
      "path_not_found": "⚠️ The path {path} does not exist or is not a directory.",
      "file_saved_success": "✅ File saved successfully\nName: {filename}\nSize: {size}\nLocation: {path}",
      "upload_completed": "✅ Upload completed\nDirectory: {directory}\nThank you for using the upload service.",
      "done": "Done",
      "continue_navigation": "Continue Navigation"
    },
    "download": {
      "title": "*File Download*",
      "select_mount": "Select a mount point to start browsing:",
      "note": "**Note:** Once selected, you can navigate through directories.",
      "no_mount_points": "⚠️ You haven't configured any download mount points. Use the web panel to configure mount points.",
      "cancel": "❌ Cancel",
      "select_file": "📥 Download this file",
      "navigation_title": "*Directory Navigation*",
      "current_path": "Current path",
      "subfolders": "Subfolders",
      "files": "Available files",
      "no_files": "No files available in this directory",
      "navigation_instruction": "Select a folder to explore or choose a file to download.",
      "parent_directory": "⬆️ Parent Directory",
      "file_too_large": "⚠️ The file `{filename}` is too large to send via Telegram.\nSize: {size} (max 50MB)",
      "file_not_found": "⚠️ The file `{filename}` was not found.",
      "download_error": "❌ Error downloading file: {error}",
      "download_success": "✅ Download completed for `{filename}`",
      "operation_cancelled": "❌ Download operation cancelled.",
      "access_denied": "⚠️ Access denied to file or directory.",
      "path_not_found": "⚠️ The path `{path}` was not found.",
      "sending_file": "📤 Sending file `{filename}`...",
      "file_sent": "✅ File sent: {filename} ({size})",
      "cancelled": "❌ Download cancelled.",
      "large_files_warning": "⚠️ {count} files too large for Telegram (>50MB)",
      "pagination_info": "Page: {current}/{total} (Showing {shown} of {total_items} items)"
    },
    "resource_info": {
  "cpu_title": "🧠 *CPU Information*",
  "ram_title": "💾 *Memory Information*",
  "disk_title": "📀 *Disk Information*",
  "network_title": "🌐 *Network Information*",
  "cpu_usage": "🧮 CPU Usage",
  "cpu_cores": "🔢 CPU Cores",
  "usage_details": "📊 Usage Details",
  "user": "👤 User",
  "system": "🖥️ System",
  "iowait": "⏳ IOWait", 
  "idle": "😴 Idle",
  "frequency": "🎚️ Current Frequency",
  "frequency_range": "📈 Range",
  "temperature": "🌡️ Temperature",
  "system_uptime": "⏱️ System Uptime",
  "ram_total": "📦 Total RAM",
  "ram_used": "📉 Used RAM",
  "ram_available": "📊 Available RAM",
  "swap_total": "🔃 Total Swap",
  "swap_used": "💽 Used Swap",
  "system_partitions": "🗂️ System Partitions",
  "mount_points_configured": "🔗 Configured Mount Points",
  "no_mount_points": "⚠️ No mount points configured",
  "io_statistics": "📈 I/O Statistics for Mount Points",
  "mount_point_unknown": "❓ Mount point not identified",
  "total": "📦 Total",
  "used": "📉 Used",
  "free": "🟢 Free",
  "reads": "📖 Reads",
  "writes": "✍️ Writes",
  "access_denied": "🚫 Access denied",
  "ip_addresses": "📡 IP Addresses",
  "ip_container": "📦 Container IP",
  "ip_server_host": "🖧 Server Host IP",
  "ip_public": "🌍 Public IP",
  "total_statistics": "📊 Total Statistics (Host)",
  "total_sent": "📤 Total Sent",
  "total_received": "📥 Total Received",
  "current_speed": "🚀 Current Speed",
  "download": "⬇️ Download",
  "upload": "⬆️ Upload",
  "network_interfaces": "🔌 Network Interfaces",
  "packets_sent": "📤 Packets Sent",
  "packets_received": "📥 Packets Received"
    },
    "time_units": {
      "day_singular": "day",
      "day_plural": "days", 
      "hour_singular": "hour",
      "hour_plural": "hours",
      "minute_singular": "minute",
      "minute_plural": "minutes",
      "second_singular": "second",
      "second_plural": "seconds"
    },
    "video_analysis": {
      "title": "Video Analysis",
      "ai_config": {
        "title": "AI Detection Configuration",
        "global_enabled": "Enable AI Detection Globally",
        "model": "YOLO Model",
        "detection_interval": "Detection Interval (seconds)",
        "max_cameras": "Max Simultaneous Cameras",
        "save_config": "Save Configuration",
        "status": "Status"
      },
      "controls": {
        "title": "Detection Controls",
        "start": "Start Detection",
        "restart": "Restart Detection",
        "stop": "Stop Detection",
        "system_status": "System Status:",
        "waiting": "Waiting for update..."
      },
      "cameras": {
        "title": "Camera Management",
        "add": "Add Camera",
        "no_cameras": "No cameras configured. Click \"Add Camera\" to get started.",
        "enabled": "Enabled",
        "settings": "Settings",
        "name": "Camera Name",
        "rtsp_url": "RTSP URL",
        "confidence": "Confidence Threshold",
        "iou_threshold": "IoU Threshold",
        "iou_threshold_description": "Intersection over Union threshold for filtering overlapping detections (lower = more strict)",
        "save_images": "Save Images to Server",
        "save_images_description": "When enabled, detection snapshots will be permanently saved to the server for all cameras",
        "save_path": "Save Path",
        "save_path_description": "Directory path where all detection snapshots will be stored on the server",
        "save_path_placeholder": "Enter the path where to save snapshots",
        "categories": "Categories to Detect",
        "people": "👤 People",
        "objects": "📦 Objects",
        "animals": "🐾 Animals",
        "save": "Save Changes",
        "delete": "Delete",
        "placeholder": {
          "name": "E.g.: Main Entrance",
          "rtsp": "rtsp://username:password@ip:port/stream",
          "save_path": "/var/lib/ssh_monitor/snapshots"
        }
      },
      "messages": {
        "config_saved": "AI configuration saved successfully",
        "cameras_saved": "Camera configuration saved successfully",
        "camera_deleted": "Camera deleted successfully",
        "detection_started": "Detection started successfully",
        "detection_stopped": "Detection stopped successfully",
        "detection_restarted": "Detection restarted successfully",
        "error": "An error occurred: {message}"
      },
      "bot_messages": {
        "detection_alert": "🔍 *AI Detection*\n\n📷 *Camera:* {camera_name}\n⏱️ *Time:* {timestamp}\n\n🔎 *Detected:*\n{detections}",
        "person_detected": "👤 Person ({confidence}%)",
        "animal_detected": "🐾 Animal: {class_name} ({confidence}%)",
        "object_detected": "📦 Object: {class_name} ({confidence}%)"
      }
    },
    "alert_messages": {
      "cpu_alert": "🚨 ALERT - CPU\n\n💻 Current usage: {value:.1f}%\n⚠️ Threshold exceeded: {threshold:.1f}%\n🕐 Timestamp: {timestamp}\n\n{top_processes}",
      "cpu_recovery": "✅ *RECOVERY - CPU*\n\n💻 *Current usage:* {value:.1f}%\n✅ *Back below threshold:* {threshold:.1f}%\n🕐 *Timestamp:* {timestamp}",
      "ram_alert": "🚨 ALERT - RAM\n\n💾 Current usage: {value:.1f}%\n⚠️ Threshold exceeded: {threshold:.1f}%\n🕐 Timestamp: {timestamp}\n\n{top_processes}",
      "ram_recovery": "✅ *RECOVERY - RAM*\n\n💾 *Current usage:* {value:.1f}%\n✅ *Back below threshold:* {threshold:.1f}%\n🕐 *Timestamp:* {timestamp}",
      "temp_alert": "🚨 ALERT - CPU Temperature\n\n🌡️ Current temperature: {value:.1f}°C\n⚠️ Threshold exceeded: {threshold:.1f}°C\n🕐 Timestamp: {timestamp}\n\n{top_processes}",
      "temp_recovery": "✅ *RECOVERY - CPU Temperature*\n\n🌡️ *Current temperature:* {value:.1f}°C\n✅ *Back below threshold:* {threshold:.1f}°C\n🕐 *Timestamp:* {timestamp}",
      "disk_alert": "🚨 *ALERT - Disk Space*\n\n📂 *Mount Point:* `{mount_point}`\n📊 *Current usage:* {value:.1f}%\n⚠️ *Threshold exceeded:* {threshold:.1f}%\n🕐 *Timestamp:* {timestamp}",
      "disk_recovery": "✅ *RECOVERY - Disk Space*\n\n📂 *Mount Point:* `{mount_point}`\n📊 *Current usage:* {value:.1f}%\n✅ *Back below threshold:* {threshold:.1f}%\n🕐 *Timestamp:* {timestamp}"
    }
  },
  "commands": {
    "title": "Commands Management",
    "description": "Configure custom scripts to execute via Telegram bot.",
    "configured_commands": "Configured Commands",
    "add_command": "Add Command",
    "new_command": "New Command",
    "command_name": "Command Name",
    "command_description": "Description",
    "script_path": "Script Path",
    "script_path_help": "Enter the full path of the script to execute (e.g. /home/user/scripts/backup.sh)",
    "enabled": "Enabled",
    "cron_enabled": "Enable Scheduling",
    "cron_schedule": "Cron Expression",
    "cron_schedule_help": "Format: minutes(0-59) hours(0-23) day_of_month(1-31) month(1-12) day_of_week(0-6, 0=Sunday)",
    "save_command": "Save Command",
    "update_command": "Update Command",
    "cancel": "Cancel",
    "test_command": "Test Command",
    "edit_command": "Edit",
    "delete_command": "Delete",
    "execute_command": "Execute",
    "command_saved": "Command saved successfully",
    "command_deleted": "Command deleted successfully",
    "command_executed": "Command executed successfully",
    "command_test_success": "Command test completed",
    "command_error": "Error executing command",
    "script_not_found": "Script not found at specified path",
    "no_commands": "No commands configured",
    "confirm_delete": "Are you sure you want to delete this command?",
    "telegram": {
      "commands_list": "📋 *Available Commands:*\n\n{commands}\n\nSelect a command to execute:",
      "no_commands": "❌ No commands configured.",
      "command_executed": "✅ *Command Executed*\n\n📝 *Name:* {name}\n📄 *Description:* {description}\n🕐 *Timestamp:* {timestamp}\n\n📤 *Output:*\n```\n{output}\n```",
      "command_error": "❌ *Command Execution Error*\n\n📝 *Name:* {name}\n🚨 *Error:* {error}\n🕐 *Timestamp:* {timestamp}",
      "command_not_found": "❌ Command not found.",
      "command_disabled": "❌ Command disabled.",
      "script_not_executable": "❌ Script not executable or not found."
    }
  },
  "charts": {
    "title": "Historical Chart",
    "time_range": "Time Range",
    "refresh": "Refresh",
    "reset": "Reset Data",
    "reset_confirm": "Are you sure you want to delete all historical chart data?",
    "reset_success": "Historical data successfully deleted",
    "reset_error": "Error deleting historical data",
    "graph_button": "📊 Graph",
    "graph_generating": "Generating graph...",
    "graph_sent": "Graph sent successfully",
    "graph_error": "Error generating graph",
    "select_time_range": "📊 Select the time range for the graph:",
    "auto_refresh": "Auto Refresh",
    "current_value": "Current Value",
    "average": "Average",
    "maximum": "Maximum",
    "minimum": "Minimum",
    "ranges": {
      "30m": "Last 30 Minutes",
      "1h": "Last Hour",
      "6h": "Last 6 Hours",
      "24h": "Last 24 Hours",
      "3d": "Last 3 Days",
      "7d": "Last 7 Days",
      "30d": "Last 30 Days"
    },
    "metrics": {
      "cpu": "CPU",
      "ram": "RAM",
      "temperature": "Temperature"
    },
    "captions": {
      "cpu_temp": "📊 CPU and Temperature Chart - {time_range}",
      "ram": "📊 RAM Chart - {time_range}",
      "data_source": "Data based on values collected in the historical_metrics.json file"
    },
    "titles": {
      "cpu_temp_detailed": "CPU and Temperature History - Detailed Analysis",
      "ram_detailed": "RAM Usage History - Detailed Analysis"
    },
    "labels": {
      "current": "Current",
      "average": "Average",
      "minimum": "Min",
      "maximum": "Max",
      "cpu_usage": "CPU Usage",
      "cpu_temperature": "CPU Temperature",
      "ram_usage": "RAM Usage"
    }
  }
}